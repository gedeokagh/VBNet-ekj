'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ekajayaDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ekajayaDataSet
    Inherits Global.System.Data.DataSet
    
    Private tabletiketdtl As tiketdtlDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tiketdtl")) Is Nothing) Then
                MyBase.Tables.Add(New tiketdtlDataTable(ds.Tables("tiketdtl")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tiketdtl() As tiketdtlDataTable
        Get
            Return Me.tabletiketdtl
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ekajayaDataSet = CType(MyBase.Clone,ekajayaDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tiketdtl")) Is Nothing) Then
                MyBase.Tables.Add(New tiketdtlDataTable(ds.Tables("tiketdtl")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletiketdtl = CType(MyBase.Tables("tiketdtl"),tiketdtlDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletiketdtl) Is Nothing) Then
                Me.tabletiketdtl.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ekajayaDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ekajayaDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletiketdtl = New tiketdtlDataTable()
        MyBase.Tables.Add(Me.tabletiketdtl)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetiketdtl() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ekajayaDataSet = New ekajayaDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tiketdtlRowChangeEventHandler(ByVal sender As Object, ByVal e As tiketdtlRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tiketdtlDataTable
        Inherits Global.System.Data.TypedTableBase(Of tiketdtlRow)
        
        Private columnNoETiket As Global.System.Data.DataColumn
        
        Private columnNoTiket As Global.System.Data.DataColumn
        
        Private columnAgentID As Global.System.Data.DataColumn
        
        Private columnGoTrip As Global.System.Data.DataColumn
        
        Private columnGoRate As Global.System.Data.DataColumn
        
        Private columnBackExtra As Global.System.Data.DataColumn
        
        Private columnBackTrans As Global.System.Data.DataColumn
        
        Private columnBackTransRate As Global.System.Data.DataColumn
        
        Private columnBackTransExtra As Global.System.Data.DataColumn
        
        Private columnBackArea As Global.System.Data.DataColumn
        
        Private columnBackPickup As Global.System.Data.DataColumn
        
        Private columnBackDriver As Global.System.Data.DataColumn
        
        Private columncollect As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnmrs As Global.System.Data.DataColumn
        
        Private columnGuest As Global.System.Data.DataColumn
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnGuestID As Global.System.Data.DataColumn
        
        Private columnGuestIDNO As Global.System.Data.DataColumn
        
        Private columnGoRuteID As Global.System.Data.DataColumn
        
        Private columnGoDate As Global.System.Data.DataColumn
        
        Private columnGoExtra As Global.System.Data.DataColumn
        
        Private columnGoTrans As Global.System.Data.DataColumn
        
        Private columnGoTranRate As Global.System.Data.DataColumn
        
        Private columnGoTransExtra As Global.System.Data.DataColumn
        
        Private columnGoArea As Global.System.Data.DataColumn
        
        Private columnGoPickUp As Global.System.Data.DataColumn
        
        Private columnGoDriver As Global.System.Data.DataColumn
        
        Private columninv As Global.System.Data.DataColumn
        
        Private columnpay As Global.System.Data.DataColumn
        
        Private columnkomisi As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnother As Global.System.Data.DataColumn
        
        Private columnBackRuteID As Global.System.Data.DataColumn
        
        Private columnBackDate As Global.System.Data.DataColumn
        
        Private columnTripBack As Global.System.Data.DataColumn
        
        Private columnBackRate As Global.System.Data.DataColumn
        
        Private columnQtyTipe As Global.System.Data.DataColumn
        
        Private columnTotalJual As Global.System.Data.DataColumn
        
        Private columnTotalCollect As Global.System.Data.DataColumn
        
        Private columnSisa As Global.System.Data.DataColumn
        
        Private columnNoBook As Global.System.Data.DataColumn
        
        Private columnNoInv As Global.System.Data.DataColumn
        
        Private columnNoCollect As Global.System.Data.DataColumn
        
        Private columnNoPay As Global.System.Data.DataColumn
        
        Private columnTipe As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tiketdtl"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoETiketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoETiket
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoTiketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoTiket
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AgentIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgentID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoTripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoTrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackExtraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackExtra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackTransColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackTrans
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackTransRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackTransRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackTransExtraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackTransExtra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackPickupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackPickup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackDriverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackDriver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollect
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mrsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmrs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuestIDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuestIDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoRuteIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoRuteID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoExtraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoExtra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoTransColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoTrans
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoTranRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoTranRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoTransExtraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoTransExtra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoPickUpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoPickUp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GoDriverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoDriver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property payColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property komisiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkomisi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property otherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnother
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackRuteIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackRuteID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TripBackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTripBack
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyTipeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtyTipe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalCollectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCollect
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoBookColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoBook
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoInvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoInv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoCollectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoCollect
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TipeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tiketdtlRow
            Get
                Return CType(Me.Rows(index),tiketdtlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tiketdtlRowChanging As tiketdtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tiketdtlRowChanged As tiketdtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tiketdtlRowDeleting As tiketdtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tiketdtlRowDeleted As tiketdtlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtiketdtlRow(ByVal row As tiketdtlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtiketdtlRow( _
                    ByVal NoETiket As String,  _
                    ByVal NoTiket As String,  _
                    ByVal AgentID As String,  _
                    ByVal GoTrip As Integer,  _
                    ByVal GoRate As Double,  _
                    ByVal BackExtra As Double,  _
                    ByVal BackTrans As Integer,  _
                    ByVal BackTransRate As Double,  _
                    ByVal BackTransExtra As Double,  _
                    ByVal BackArea As Integer,  _
                    ByVal BackPickup As String,  _
                    ByVal BackDriver As String,  _
                    ByVal collect As Integer,  _
                    ByVal Qty As Integer,  _
                    ByVal mrs As String,  _
                    ByVal Guest As String,  _
                    ByVal Country As Integer,  _
                    ByVal GuestID As String,  _
                    ByVal GuestIDNO As String,  _
                    ByVal GoRuteID As Integer,  _
                    ByVal GoDate As Date,  _
                    ByVal GoExtra As Double,  _
                    ByVal GoTrans As Integer,  _
                    ByVal GoTranRate As Double,  _
                    ByVal GoTransExtra As Double,  _
                    ByVal GoArea As Integer,  _
                    ByVal GoPickUp As String,  _
                    ByVal GoDriver As String,  _
                    ByVal inv As Integer,  _
                    ByVal pay As Integer,  _
                    ByVal komisi As Double,  _
                    ByVal Remark As String,  _
                    ByVal other As String,  _
                    ByVal BackRuteID As Integer,  _
                    ByVal BackDate As Date,  _
                    ByVal TripBack As Integer,  _
                    ByVal BackRate As Double,  _
                    ByVal QtyTipe As Integer,  _
                    ByVal TotalJual As Double,  _
                    ByVal TotalCollect As Double,  _
                    ByVal Sisa As Double,  _
                    ByVal NoBook As String,  _
                    ByVal NoInv As String,  _
                    ByVal NoCollect As String,  _
                    ByVal NoPay As String,  _
                    ByVal Tipe As String) As tiketdtlRow
            Dim rowtiketdtlRow As tiketdtlRow = CType(Me.NewRow,tiketdtlRow)
            Dim columnValuesArray() As Object = New Object() {NoETiket, NoTiket, AgentID, GoTrip, GoRate, BackExtra, BackTrans, BackTransRate, BackTransExtra, BackArea, BackPickup, BackDriver, collect, Qty, mrs, Guest, Country, GuestID, GuestIDNO, GoRuteID, GoDate, GoExtra, GoTrans, GoTranRate, GoTransExtra, GoArea, GoPickUp, GoDriver, inv, pay, komisi, Remark, other, BackRuteID, BackDate, TripBack, BackRate, QtyTipe, TotalJual, TotalCollect, Sisa, NoBook, NoInv, NoCollect, NoPay, Tipe}
            rowtiketdtlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtiketdtlRow)
            Return rowtiketdtlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNoETiketNoTiket(ByVal NoETiket As String, ByVal NoTiket As String) As tiketdtlRow
            Return CType(Me.Rows.Find(New Object() {NoETiket, NoTiket}),tiketdtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tiketdtlDataTable = CType(MyBase.Clone,tiketdtlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tiketdtlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNoETiket = MyBase.Columns("NoETiket")
            Me.columnNoTiket = MyBase.Columns("NoTiket")
            Me.columnAgentID = MyBase.Columns("AgentID")
            Me.columnGoTrip = MyBase.Columns("GoTrip")
            Me.columnGoRate = MyBase.Columns("GoRate")
            Me.columnBackExtra = MyBase.Columns("BackExtra")
            Me.columnBackTrans = MyBase.Columns("BackTrans")
            Me.columnBackTransRate = MyBase.Columns("BackTransRate")
            Me.columnBackTransExtra = MyBase.Columns("BackTransExtra")
            Me.columnBackArea = MyBase.Columns("BackArea")
            Me.columnBackPickup = MyBase.Columns("BackPickup")
            Me.columnBackDriver = MyBase.Columns("BackDriver")
            Me.columncollect = MyBase.Columns("collect")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnmrs = MyBase.Columns("mrs")
            Me.columnGuest = MyBase.Columns("Guest")
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnGuestID = MyBase.Columns("GuestID")
            Me.columnGuestIDNO = MyBase.Columns("GuestIDNO")
            Me.columnGoRuteID = MyBase.Columns("GoRuteID")
            Me.columnGoDate = MyBase.Columns("GoDate")
            Me.columnGoExtra = MyBase.Columns("GoExtra")
            Me.columnGoTrans = MyBase.Columns("GoTrans")
            Me.columnGoTranRate = MyBase.Columns("GoTranRate")
            Me.columnGoTransExtra = MyBase.Columns("GoTransExtra")
            Me.columnGoArea = MyBase.Columns("GoArea")
            Me.columnGoPickUp = MyBase.Columns("GoPickUp")
            Me.columnGoDriver = MyBase.Columns("GoDriver")
            Me.columninv = MyBase.Columns("inv")
            Me.columnpay = MyBase.Columns("pay")
            Me.columnkomisi = MyBase.Columns("komisi")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnother = MyBase.Columns("other")
            Me.columnBackRuteID = MyBase.Columns("BackRuteID")
            Me.columnBackDate = MyBase.Columns("BackDate")
            Me.columnTripBack = MyBase.Columns("TripBack")
            Me.columnBackRate = MyBase.Columns("BackRate")
            Me.columnQtyTipe = MyBase.Columns("QtyTipe")
            Me.columnTotalJual = MyBase.Columns("TotalJual")
            Me.columnTotalCollect = MyBase.Columns("TotalCollect")
            Me.columnSisa = MyBase.Columns("Sisa")
            Me.columnNoBook = MyBase.Columns("NoBook")
            Me.columnNoInv = MyBase.Columns("NoInv")
            Me.columnNoCollect = MyBase.Columns("NoCollect")
            Me.columnNoPay = MyBase.Columns("NoPay")
            Me.columnTipe = MyBase.Columns("Tipe")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNoETiket = New Global.System.Data.DataColumn("NoETiket", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoETiket)
            Me.columnNoTiket = New Global.System.Data.DataColumn("NoTiket", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoTiket)
            Me.columnAgentID = New Global.System.Data.DataColumn("AgentID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgentID)
            Me.columnGoTrip = New Global.System.Data.DataColumn("GoTrip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoTrip)
            Me.columnGoRate = New Global.System.Data.DataColumn("GoRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoRate)
            Me.columnBackExtra = New Global.System.Data.DataColumn("BackExtra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackExtra)
            Me.columnBackTrans = New Global.System.Data.DataColumn("BackTrans", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackTrans)
            Me.columnBackTransRate = New Global.System.Data.DataColumn("BackTransRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackTransRate)
            Me.columnBackTransExtra = New Global.System.Data.DataColumn("BackTransExtra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackTransExtra)
            Me.columnBackArea = New Global.System.Data.DataColumn("BackArea", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackArea)
            Me.columnBackPickup = New Global.System.Data.DataColumn("BackPickup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackPickup)
            Me.columnBackDriver = New Global.System.Data.DataColumn("BackDriver", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackDriver)
            Me.columncollect = New Global.System.Data.DataColumn("collect", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollect)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnmrs = New Global.System.Data.DataColumn("mrs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmrs)
            Me.columnGuest = New Global.System.Data.DataColumn("Guest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuest)
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnGuestID = New Global.System.Data.DataColumn("GuestID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuestID)
            Me.columnGuestIDNO = New Global.System.Data.DataColumn("GuestIDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuestIDNO)
            Me.columnGoRuteID = New Global.System.Data.DataColumn("GoRuteID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoRuteID)
            Me.columnGoDate = New Global.System.Data.DataColumn("GoDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoDate)
            Me.columnGoExtra = New Global.System.Data.DataColumn("GoExtra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoExtra)
            Me.columnGoTrans = New Global.System.Data.DataColumn("GoTrans", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoTrans)
            Me.columnGoTranRate = New Global.System.Data.DataColumn("GoTranRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoTranRate)
            Me.columnGoTransExtra = New Global.System.Data.DataColumn("GoTransExtra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoTransExtra)
            Me.columnGoArea = New Global.System.Data.DataColumn("GoArea", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoArea)
            Me.columnGoPickUp = New Global.System.Data.DataColumn("GoPickUp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoPickUp)
            Me.columnGoDriver = New Global.System.Data.DataColumn("GoDriver", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoDriver)
            Me.columninv = New Global.System.Data.DataColumn("inv", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninv)
            Me.columnpay = New Global.System.Data.DataColumn("pay", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpay)
            Me.columnkomisi = New Global.System.Data.DataColumn("komisi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkomisi)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnother = New Global.System.Data.DataColumn("other", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnother)
            Me.columnBackRuteID = New Global.System.Data.DataColumn("BackRuteID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackRuteID)
            Me.columnBackDate = New Global.System.Data.DataColumn("BackDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackDate)
            Me.columnTripBack = New Global.System.Data.DataColumn("TripBack", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTripBack)
            Me.columnBackRate = New Global.System.Data.DataColumn("BackRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackRate)
            Me.columnQtyTipe = New Global.System.Data.DataColumn("QtyTipe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtyTipe)
            Me.columnTotalJual = New Global.System.Data.DataColumn("TotalJual", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalJual)
            Me.columnTotalCollect = New Global.System.Data.DataColumn("TotalCollect", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCollect)
            Me.columnSisa = New Global.System.Data.DataColumn("Sisa", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSisa)
            Me.columnNoBook = New Global.System.Data.DataColumn("NoBook", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoBook)
            Me.columnNoInv = New Global.System.Data.DataColumn("NoInv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoInv)
            Me.columnNoCollect = New Global.System.Data.DataColumn("NoCollect", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoCollect)
            Me.columnNoPay = New Global.System.Data.DataColumn("NoPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoPay)
            Me.columnTipe = New Global.System.Data.DataColumn("Tipe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipe)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNoETiket, Me.columnNoTiket}, true))
            Me.columnNoETiket.AllowDBNull = false
            Me.columnNoETiket.MaxLength = 50
            Me.columnNoTiket.AllowDBNull = false
            Me.columnNoTiket.MaxLength = 20
            Me.columnAgentID.MaxLength = 100
            Me.columnBackPickup.MaxLength = 65535
            Me.columnBackDriver.MaxLength = 100
            Me.columnmrs.MaxLength = 3
            Me.columnGuest.MaxLength = 50
            Me.columnGuestID.MaxLength = 10
            Me.columnGuestIDNO.MaxLength = 50
            Me.columnGoPickUp.MaxLength = 65535
            Me.columnGoDriver.MaxLength = 100
            Me.columnRemark.MaxLength = 65535
            Me.columnother.MaxLength = 65535
            Me.columnNoBook.MaxLength = 25
            Me.columnNoInv.MaxLength = 25
            Me.columnNoCollect.MaxLength = 25
            Me.columnNoPay.MaxLength = 25
            Me.columnTipe.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtiketdtlRow() As tiketdtlRow
            Return CType(Me.NewRow,tiketdtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tiketdtlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tiketdtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tiketdtlRowChangedEvent) Is Nothing) Then
                RaiseEvent tiketdtlRowChanged(Me, New tiketdtlRowChangeEvent(CType(e.Row,tiketdtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tiketdtlRowChangingEvent) Is Nothing) Then
                RaiseEvent tiketdtlRowChanging(Me, New tiketdtlRowChangeEvent(CType(e.Row,tiketdtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tiketdtlRowDeletedEvent) Is Nothing) Then
                RaiseEvent tiketdtlRowDeleted(Me, New tiketdtlRowChangeEvent(CType(e.Row,tiketdtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tiketdtlRowDeletingEvent) Is Nothing) Then
                RaiseEvent tiketdtlRowDeleting(Me, New tiketdtlRowChangeEvent(CType(e.Row,tiketdtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetiketdtlRow(ByVal row As tiketdtlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ekajayaDataSet = New ekajayaDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tiketdtlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tiketdtlRow
        Inherits Global.System.Data.DataRow
        
        Private tabletiketdtl As tiketdtlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletiketdtl = CType(Me.Table,tiketdtlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoETiket() As String
            Get
                Return CType(Me(Me.tabletiketdtl.NoETiketColumn),String)
            End Get
            Set
                Me(Me.tabletiketdtl.NoETiketColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoTiket() As String
            Get
                Return CType(Me(Me.tabletiketdtl.NoTiketColumn),String)
            End Get
            Set
                Me(Me.tabletiketdtl.NoTiketColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AgentID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.AgentIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AgentID' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.AgentIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoTrip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoTripColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoTrip' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoTripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoRate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackExtra() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackExtraColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackExtra' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackExtraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackTrans() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackTransColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackTrans' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackTransColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackTransRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackTransRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackTransRate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackTransRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackTransExtra() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackTransExtraColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackTransExtra' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackTransExtraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackArea() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackAreaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackArea' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackPickup() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackPickupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackPickup' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackPickupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackDriver() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackDriverColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackDriver' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackDriverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property collect() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.collectColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'collect' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.collectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.QtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mrs() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.mrsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mrs' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.mrsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Guest() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GuestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Guest' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GuestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Country() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.CountryColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Country' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.CountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuestID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GuestIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuestID' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GuestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuestIDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GuestIDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuestIDNO' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GuestIDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoRuteID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoRuteIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoRuteID' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoRuteIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoDate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoExtra() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoExtraColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoExtra' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoExtraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoTrans() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoTransColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoTrans' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoTransColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoTranRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoTranRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoTranRate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoTranRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoTransExtra() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoTransExtraColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoTransExtra' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoTransExtraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoArea() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoAreaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoArea' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoPickUp() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoPickUpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoPickUp' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoPickUpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GoDriver() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.GoDriverColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoDriver' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.GoDriverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inv() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.invColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inv' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pay() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.payColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pay' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.payColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property komisi() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.komisiColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'komisi' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.komisiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property other() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.otherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'other' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.otherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackRuteID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackRuteIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackRuteID' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackRuteIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackDate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TripBack() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.TripBackColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TripBack' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.TripBackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.BackRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackRate' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.BackRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QtyTipe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.QtyTipeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QtyTipe' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.QtyTipeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalJual() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.TotalJualColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalJual' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.TotalJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalCollect() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.TotalCollectColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCollect' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.TotalCollectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sisa() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.SisaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sisa' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.SisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoBook() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.NoBookColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoBook' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.NoBookColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoInv() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.NoInvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoInv' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.NoInvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoCollect() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.NoCollectColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoCollect' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.NoCollectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoPay() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.NoPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoPay' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.NoPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tipe() As String
            Get
                Try 
                    Return CType(Me(Me.tabletiketdtl.TipeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tipe' in table 'tiketdtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletiketdtl.TipeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAgentIDNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.AgentIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAgentIDNull()
            Me(Me.tabletiketdtl.AgentIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoTripNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoTripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoTripNull()
            Me(Me.tabletiketdtl.GoTripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoRateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoRateNull()
            Me(Me.tabletiketdtl.GoRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackExtraNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackExtraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackExtraNull()
            Me(Me.tabletiketdtl.BackExtraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackTransNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackTransColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackTransNull()
            Me(Me.tabletiketdtl.BackTransColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackTransRateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackTransRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackTransRateNull()
            Me(Me.tabletiketdtl.BackTransRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackTransExtraNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackTransExtraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackTransExtraNull()
            Me(Me.tabletiketdtl.BackTransExtraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackAreaNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackAreaNull()
            Me(Me.tabletiketdtl.BackAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackPickupNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackPickupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackPickupNull()
            Me(Me.tabletiketdtl.BackPickupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackDriverNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackDriverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackDriverNull()
            Me(Me.tabletiketdtl.BackDriverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollectNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.collectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollectNull()
            Me(Me.tabletiketdtl.collectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tabletiketdtl.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmrsNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.mrsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmrsNull()
            Me(Me.tabletiketdtl.mrsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuestNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GuestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuestNull()
            Me(Me.tabletiketdtl.GuestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountryNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.CountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountryNull()
            Me(Me.tabletiketdtl.CountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuestIDNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GuestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuestIDNull()
            Me(Me.tabletiketdtl.GuestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuestIDNONull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GuestIDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuestIDNONull()
            Me(Me.tabletiketdtl.GuestIDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoRuteIDNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoRuteIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoRuteIDNull()
            Me(Me.tabletiketdtl.GoRuteIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoDateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoDateNull()
            Me(Me.tabletiketdtl.GoDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoExtraNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoExtraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoExtraNull()
            Me(Me.tabletiketdtl.GoExtraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoTransNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoTransColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoTransNull()
            Me(Me.tabletiketdtl.GoTransColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoTranRateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoTranRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoTranRateNull()
            Me(Me.tabletiketdtl.GoTranRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoTransExtraNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoTransExtraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoTransExtraNull()
            Me(Me.tabletiketdtl.GoTransExtraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoAreaNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoAreaNull()
            Me(Me.tabletiketdtl.GoAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoPickUpNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoPickUpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoPickUpNull()
            Me(Me.tabletiketdtl.GoPickUpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGoDriverNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.GoDriverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGoDriverNull()
            Me(Me.tabletiketdtl.GoDriverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinvNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.invColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinvNull()
            Me(Me.tabletiketdtl.invColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspayNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.payColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpayNull()
            Me(Me.tabletiketdtl.payColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IskomisiNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.komisiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetkomisiNull()
            Me(Me.tabletiketdtl.komisiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarkNull()
            Me(Me.tabletiketdtl.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsotherNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.otherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetotherNull()
            Me(Me.tabletiketdtl.otherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackRuteIDNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackRuteIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackRuteIDNull()
            Me(Me.tabletiketdtl.BackRuteIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackDateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackDateNull()
            Me(Me.tabletiketdtl.BackDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTripBackNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.TripBackColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTripBackNull()
            Me(Me.tabletiketdtl.TripBackColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBackRateNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.BackRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBackRateNull()
            Me(Me.tabletiketdtl.BackRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyTipeNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.QtyTipeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyTipeNull()
            Me(Me.tabletiketdtl.QtyTipeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalJualNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.TotalJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalJualNull()
            Me(Me.tabletiketdtl.TotalJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalCollectNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.TotalCollectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalCollectNull()
            Me(Me.tabletiketdtl.TotalCollectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSisaNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.SisaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSisaNull()
            Me(Me.tabletiketdtl.SisaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoBookNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.NoBookColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoBookNull()
            Me(Me.tabletiketdtl.NoBookColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoInvNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.NoInvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoInvNull()
            Me(Me.tabletiketdtl.NoInvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoCollectNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.NoCollectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoCollectNull()
            Me(Me.tabletiketdtl.NoCollectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoPayNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.NoPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoPayNull()
            Me(Me.tabletiketdtl.NoPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTipeNull() As Boolean
            Return Me.IsNull(Me.tabletiketdtl.TipeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTipeNull()
            Me(Me.tabletiketdtl.TipeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tiketdtlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tiketdtlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tiketdtlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tiketdtlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ekajayaDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tiketdtlTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tiketdtl"
            tableMapping.ColumnMappings.Add("NoETiket", "NoETiket")
            tableMapping.ColumnMappings.Add("NoTiket", "NoTiket")
            tableMapping.ColumnMappings.Add("AgentID", "AgentID")
            tableMapping.ColumnMappings.Add("GoTrip", "GoTrip")
            tableMapping.ColumnMappings.Add("GoRate", "GoRate")
            tableMapping.ColumnMappings.Add("BackExtra", "BackExtra")
            tableMapping.ColumnMappings.Add("BackTrans", "BackTrans")
            tableMapping.ColumnMappings.Add("BackTransRate", "BackTransRate")
            tableMapping.ColumnMappings.Add("BackTransExtra", "BackTransExtra")
            tableMapping.ColumnMappings.Add("BackArea", "BackArea")
            tableMapping.ColumnMappings.Add("BackPickup", "BackPickup")
            tableMapping.ColumnMappings.Add("BackDriver", "BackDriver")
            tableMapping.ColumnMappings.Add("collect", "collect")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("mrs", "mrs")
            tableMapping.ColumnMappings.Add("Guest", "Guest")
            tableMapping.ColumnMappings.Add("Country", "Country")
            tableMapping.ColumnMappings.Add("GuestID", "GuestID")
            tableMapping.ColumnMappings.Add("GuestIDNO", "GuestIDNO")
            tableMapping.ColumnMappings.Add("GoRuteID", "GoRuteID")
            tableMapping.ColumnMappings.Add("GoDate", "GoDate")
            tableMapping.ColumnMappings.Add("GoExtra", "GoExtra")
            tableMapping.ColumnMappings.Add("GoTrans", "GoTrans")
            tableMapping.ColumnMappings.Add("GoTranRate", "GoTranRate")
            tableMapping.ColumnMappings.Add("GoTransExtra", "GoTransExtra")
            tableMapping.ColumnMappings.Add("GoArea", "GoArea")
            tableMapping.ColumnMappings.Add("GoPickUp", "GoPickUp")
            tableMapping.ColumnMappings.Add("GoDriver", "GoDriver")
            tableMapping.ColumnMappings.Add("inv", "inv")
            tableMapping.ColumnMappings.Add("pay", "pay")
            tableMapping.ColumnMappings.Add("komisi", "komisi")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            tableMapping.ColumnMappings.Add("other", "other")
            tableMapping.ColumnMappings.Add("BackRuteID", "BackRuteID")
            tableMapping.ColumnMappings.Add("BackDate", "BackDate")
            tableMapping.ColumnMappings.Add("TripBack", "TripBack")
            tableMapping.ColumnMappings.Add("BackRate", "BackRate")
            tableMapping.ColumnMappings.Add("QtyTipe", "QtyTipe")
            tableMapping.ColumnMappings.Add("TotalJual", "TotalJual")
            tableMapping.ColumnMappings.Add("TotalCollect", "TotalCollect")
            tableMapping.ColumnMappings.Add("Sisa", "Sisa")
            tableMapping.ColumnMappings.Add("NoBook", "NoBook")
            tableMapping.ColumnMappings.Add("NoInv", "NoInv")
            tableMapping.ColumnMappings.Add("NoCollect", "NoCollect")
            tableMapping.ColumnMappings.Add("NoPay", "NoPay")
            tableMapping.ColumnMappings.Add("Tipe", "Tipe")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tiketdtl` WHERE ((`NoETiket` = @Original_NoETiket) AND (`NoTiket` = "& _ 
                "@Original_NoTiket) AND ((@IsNull_AgentID = 1 AND `AgentID` IS NULL) OR (`AgentID"& _ 
                "` = @Original_AgentID)) AND ((@IsNull_GoTrip = 1 AND `GoTrip` IS NULL) OR (`GoTr"& _ 
                "ip` = @Original_GoTrip)) AND ((@IsNull_GoRate = 1 AND `GoRate` IS NULL) OR (`GoR"& _ 
                "ate` = @Original_GoRate)) AND ((@IsNull_BackExtra = 1 AND `BackExtra` IS NULL) O"& _ 
                "R (`BackExtra` = @Original_BackExtra)) AND ((@IsNull_BackTrans = 1 AND `BackTran"& _ 
                "s` IS NULL) OR (`BackTrans` = @Original_BackTrans)) AND ((@IsNull_BackTransRate "& _ 
                "= 1 AND `BackTransRate` IS NULL) OR (`BackTransRate` = @Original_BackTransRate))"& _ 
                " AND ((@IsNull_BackTransExtra = 1 AND `BackTransExtra` IS NULL) OR (`BackTransEx"& _ 
                "tra` = @Original_BackTransExtra)) AND ((@IsNull_BackArea = 1 AND `BackArea` IS N"& _ 
                "ULL) OR (`BackArea` = @Original_BackArea)) AND ((@IsNull_BackDriver = 1 AND `Bac"& _ 
                "kDriver` IS NULL) OR (`BackDriver` = @Original_BackDriver)) AND ((@IsNull_collec"& _ 
                "t = 1 AND `collect` IS NULL) OR (`collect` = @Original_collect)) AND ((@IsNull_Q"& _ 
                "ty = 1 AND `Qty` IS NULL) OR (`Qty` = @Original_Qty)) AND ((@IsNull_mrs = 1 AND "& _ 
                "`mrs` IS NULL) OR (`mrs` = @Original_mrs)) AND ((@IsNull_Guest = 1 AND `Guest` I"& _ 
                "S NULL) OR (`Guest` = @Original_Guest)) AND ((@IsNull_Country = 1 AND `Country` "& _ 
                "IS NULL) OR (`Country` = @Original_Country)) AND ((@IsNull_GuestID = 1 AND `Gues"& _ 
                "tID` IS NULL) OR (`GuestID` = @Original_GuestID)) AND ((@IsNull_GuestIDNO = 1 AN"& _ 
                "D `GuestIDNO` IS NULL) OR (`GuestIDNO` = @Original_GuestIDNO)) AND ((@IsNull_GoR"& _ 
                "uteID = 1 AND `GoRuteID` IS NULL) OR (`GoRuteID` = @Original_GoRuteID)) AND ((@I"& _ 
                "sNull_GoDate = 1 AND `GoDate` IS NULL) OR (`GoDate` = @Original_GoDate)) AND ((@"& _ 
                "IsNull_GoExtra = 1 AND `GoExtra` IS NULL) OR (`GoExtra` = @Original_GoExtra)) AN"& _ 
                "D ((@IsNull_GoTrans = 1 AND `GoTrans` IS NULL) OR (`GoTrans` = @Original_GoTrans"& _ 
                ")) AND ((@IsNull_GoTranRate = 1 AND `GoTranRate` IS NULL) OR (`GoTranRate` = @Or"& _ 
                "iginal_GoTranRate)) AND ((@IsNull_GoTransExtra = 1 AND `GoTransExtra` IS NULL) O"& _ 
                "R (`GoTransExtra` = @Original_GoTransExtra)) AND ((@IsNull_GoArea = 1 AND `GoAre"& _ 
                "a` IS NULL) OR (`GoArea` = @Original_GoArea)) AND ((@IsNull_GoDriver = 1 AND `Go"& _ 
                "Driver` IS NULL) OR (`GoDriver` = @Original_GoDriver)) AND ((@IsNull_inv = 1 AND"& _ 
                " `inv` IS NULL) OR (`inv` = @Original_inv)) AND ((@IsNull_pay = 1 AND `pay` IS N"& _ 
                "ULL) OR (`pay` = @Original_pay)) AND ((@IsNull_komisi = 1 AND `komisi` IS NULL) "& _ 
                "OR (`komisi` = @Original_komisi)) AND ((@IsNull_BackRuteID = 1 AND `BackRuteID` "& _ 
                "IS NULL) OR (`BackRuteID` = @Original_BackRuteID)) AND ((@IsNull_BackDate = 1 AN"& _ 
                "D `BackDate` IS NULL) OR (`BackDate` = @Original_BackDate)) AND ((@IsNull_TripBa"& _ 
                "ck = 1 AND `TripBack` IS NULL) OR (`TripBack` = @Original_TripBack)) AND ((@IsNu"& _ 
                "ll_BackRate = 1 AND `BackRate` IS NULL) OR (`BackRate` = @Original_BackRate)) AN"& _ 
                "D ((@IsNull_QtyTipe = 1 AND `QtyTipe` IS NULL) OR (`QtyTipe` = @Original_QtyTipe"& _ 
                ")) AND ((@IsNull_TotalJual = 1 AND `TotalJual` IS NULL) OR (`TotalJual` = @Origi"& _ 
                "nal_TotalJual)) AND ((@IsNull_TotalCollect = 1 AND `TotalCollect` IS NULL) OR (`"& _ 
                "TotalCollect` = @Original_TotalCollect)) AND ((@IsNull_Sisa = 1 AND `Sisa` IS NU"& _ 
                "LL) OR (`Sisa` = @Original_Sisa)) AND ((@IsNull_NoBook = 1 AND `NoBook` IS NULL)"& _ 
                " OR (`NoBook` = @Original_NoBook)) AND ((@IsNull_NoInv = 1 AND `NoInv` IS NULL) "& _ 
                "OR (`NoInv` = @Original_NoInv)) AND ((@IsNull_NoCollect = 1 AND `NoCollect` IS N"& _ 
                "ULL) OR (`NoCollect` = @Original_NoCollect)) AND ((@IsNull_NoPay = 1 AND `NoPay`"& _ 
                " IS NULL) OR (`NoPay` = @Original_NoPay)) AND ((@IsNull_Tipe = 1 AND `Tipe` IS N"& _ 
                "ULL) OR (`Tipe` = @Original_Tipe)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoETiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoETiket"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoTiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTiket"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AgentID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AgentID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTransRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTransRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTransExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackDriver"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_mrs"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "mrs"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_mrs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mrs"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Guest"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Guest"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Guest"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Guest"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GuestID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GuestID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GuestIDNO"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GuestIDNO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoDate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTranRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTranRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTransExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoDriver"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_komisi"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "komisi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_komisi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "komisi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackDate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TotalJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TotalJual"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TotalCollect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TotalCollect"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Sisa"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Sisa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoBook"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoBook"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoInv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoInv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoCollect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoCollect"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoPay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoPay"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Tipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipe"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tiketdtl` (`NoETiket`, `NoTiket`, `AgentID`, `GoTrip`, `GoRate`, `Ba"& _ 
                "ckExtra`, `BackTrans`, `BackTransRate`, `BackTransExtra`, `BackArea`, `BackPicku"& _ 
                "p`, `BackDriver`, `collect`, `Qty`, `mrs`, `Guest`, `Country`, `GuestID`, `Guest"& _ 
                "IDNO`, `GoRuteID`, `GoDate`, `GoExtra`, `GoTrans`, `GoTranRate`, `GoTransExtra`,"& _ 
                " `GoArea`, `GoPickUp`, `GoDriver`, `inv`, `pay`, `komisi`, `Remark`, `other`, `B"& _ 
                "ackRuteID`, `BackDate`, `TripBack`, `BackRate`, `QtyTipe`, `TotalJual`, `TotalCo"& _ 
                "llect`, `Sisa`, `NoBook`, `NoInv`, `NoCollect`, `NoPay`, `Tipe`) VALUES (@NoETik"& _ 
                "et, @NoTiket, @AgentID, @GoTrip, @GoRate, @BackExtra, @BackTrans, @BackTransRate"& _ 
                ", @BackTransExtra, @BackArea, @BackPickup, @BackDriver, @collect, @Qty, @mrs, @G"& _ 
                "uest, @Country, @GuestID, @GuestIDNO, @GoRuteID, @GoDate, @GoExtra, @GoTrans, @G"& _ 
                "oTranRate, @GoTransExtra, @GoArea, @GoPickUp, @GoDriver, @inv, @pay, @komisi, @R"& _ 
                "emark, @other, @BackRuteID, @BackDate, @TripBack, @BackRate, @QtyTipe, @TotalJua"& _ 
                "l, @TotalCollect, @Sisa, @NoBook, @NoInv, @NoCollect, @NoPay, @Tipe)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoETiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoETiket"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoTiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTiket"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AgentID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTransRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackPickup"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "BackPickup"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@mrs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mrs"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Guest"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Guest"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GuestID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GuestIDNO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTranRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoPickUp"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "GoPickUp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@komisi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "komisi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Remark"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "Remark"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@other"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "other"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TotalJual"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TotalCollect"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Sisa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoBook"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoInv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoCollect"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoPay"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipe"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tiketdtl` SET `NoETiket` = @NoETiket, `NoTiket` = @NoTiket, `AgentID` = @"& _ 
                "AgentID, `GoTrip` = @GoTrip, `GoRate` = @GoRate, `BackExtra` = @BackExtra, `Back"& _ 
                "Trans` = @BackTrans, `BackTransRate` = @BackTransRate, `BackTransExtra` = @BackT"& _ 
                "ransExtra, `BackArea` = @BackArea, `BackPickup` = @BackPickup, `BackDriver` = @B"& _ 
                "ackDriver, `collect` = @collect, `Qty` = @Qty, `mrs` = @mrs, `Guest` = @Guest, `"& _ 
                "Country` = @Country, `GuestID` = @GuestID, `GuestIDNO` = @GuestIDNO, `GoRuteID` "& _ 
                "= @GoRuteID, `GoDate` = @GoDate, `GoExtra` = @GoExtra, `GoTrans` = @GoTrans, `Go"& _ 
                "TranRate` = @GoTranRate, `GoTransExtra` = @GoTransExtra, `GoArea` = @GoArea, `Go"& _ 
                "PickUp` = @GoPickUp, `GoDriver` = @GoDriver, `inv` = @inv, `pay` = @pay, `komisi"& _ 
                "` = @komisi, `Remark` = @Remark, `other` = @other, `BackRuteID` = @BackRuteID, `"& _ 
                "BackDate` = @BackDate, `TripBack` = @TripBack, `BackRate` = @BackRate, `QtyTipe`"& _ 
                " = @QtyTipe, `TotalJual` = @TotalJual, `TotalCollect` = @TotalCollect, `Sisa` = "& _ 
                "@Sisa, `NoBook` = @NoBook, `NoInv` = @NoInv, `NoCollect` = @NoCollect, `NoPay` ="& _ 
                " @NoPay, `Tipe` = @Tipe WHERE ((`NoETiket` = @Original_NoETiket) AND (`NoTiket` "& _ 
                "= @Original_NoTiket) AND ((@IsNull_AgentID = 1 AND `AgentID` IS NULL) OR (`Agent"& _ 
                "ID` = @Original_AgentID)) AND ((@IsNull_GoTrip = 1 AND `GoTrip` IS NULL) OR (`Go"& _ 
                "Trip` = @Original_GoTrip)) AND ((@IsNull_GoRate = 1 AND `GoRate` IS NULL) OR (`G"& _ 
                "oRate` = @Original_GoRate)) AND ((@IsNull_BackExtra = 1 AND `BackExtra` IS NULL)"& _ 
                " OR (`BackExtra` = @Original_BackExtra)) AND ((@IsNull_BackTrans = 1 AND `BackTr"& _ 
                "ans` IS NULL) OR (`BackTrans` = @Original_BackTrans)) AND ((@IsNull_BackTransRat"& _ 
                "e = 1 AND `BackTransRate` IS NULL) OR (`BackTransRate` = @Original_BackTransRate"& _ 
                ")) AND ((@IsNull_BackTransExtra = 1 AND `BackTransExtra` IS NULL) OR (`BackTrans"& _ 
                "Extra` = @Original_BackTransExtra)) AND ((@IsNull_BackArea = 1 AND `BackArea` IS"& _ 
                " NULL) OR (`BackArea` = @Original_BackArea)) AND ((@IsNull_BackDriver = 1 AND `B"& _ 
                "ackDriver` IS NULL) OR (`BackDriver` = @Original_BackDriver)) AND ((@IsNull_coll"& _ 
                "ect = 1 AND `collect` IS NULL) OR (`collect` = @Original_collect)) AND ((@IsNull"& _ 
                "_Qty = 1 AND `Qty` IS NULL) OR (`Qty` = @Original_Qty)) AND ((@IsNull_mrs = 1 AN"& _ 
                "D `mrs` IS NULL) OR (`mrs` = @Original_mrs)) AND ((@IsNull_Guest = 1 AND `Guest`"& _ 
                " IS NULL) OR (`Guest` = @Original_Guest)) AND ((@IsNull_Country = 1 AND `Country"& _ 
                "` IS NULL) OR (`Country` = @Original_Country)) AND ((@IsNull_GuestID = 1 AND `Gu"& _ 
                "estID` IS NULL) OR (`GuestID` = @Original_GuestID)) AND ((@IsNull_GuestIDNO = 1 "& _ 
                "AND `GuestIDNO` IS NULL) OR (`GuestIDNO` = @Original_GuestIDNO)) AND ((@IsNull_G"& _ 
                "oRuteID = 1 AND `GoRuteID` IS NULL) OR (`GoRuteID` = @Original_GoRuteID)) AND (("& _ 
                "@IsNull_GoDate = 1 AND `GoDate` IS NULL) OR (`GoDate` = @Original_GoDate)) AND ("& _ 
                "(@IsNull_GoExtra = 1 AND `GoExtra` IS NULL) OR (`GoExtra` = @Original_GoExtra)) "& _ 
                "AND ((@IsNull_GoTrans = 1 AND `GoTrans` IS NULL) OR (`GoTrans` = @Original_GoTra"& _ 
                "ns)) AND ((@IsNull_GoTranRate = 1 AND `GoTranRate` IS NULL) OR (`GoTranRate` = @"& _ 
                "Original_GoTranRate)) AND ((@IsNull_GoTransExtra = 1 AND `GoTransExtra` IS NULL)"& _ 
                " OR (`GoTransExtra` = @Original_GoTransExtra)) AND ((@IsNull_GoArea = 1 AND `GoA"& _ 
                "rea` IS NULL) OR (`GoArea` = @Original_GoArea)) AND ((@IsNull_GoDriver = 1 AND `"& _ 
                "GoDriver` IS NULL) OR (`GoDriver` = @Original_GoDriver)) AND ((@IsNull_inv = 1 A"& _ 
                "ND `inv` IS NULL) OR (`inv` = @Original_inv)) AND ((@IsNull_pay = 1 AND `pay` IS"& _ 
                " NULL) OR (`pay` = @Original_pay)) AND ((@IsNull_komisi = 1 AND `komisi` IS NULL"& _ 
                ") OR (`komisi` = @Original_komisi)) AND ((@IsNull_BackRuteID = 1 AND `BackRuteID"& _ 
                "` IS NULL) OR (`BackRuteID` = @Original_BackRuteID)) AND ((@IsNull_BackDate = 1 "& _ 
                "AND `BackDate` IS NULL) OR (`BackDate` = @Original_BackDate)) AND ((@IsNull_Trip"& _ 
                "Back = 1 AND `TripBack` IS NULL) OR (`TripBack` = @Original_TripBack)) AND ((@Is"& _ 
                "Null_BackRate = 1 AND `BackRate` IS NULL) OR (`BackRate` = @Original_BackRate)) "& _ 
                "AND ((@IsNull_QtyTipe = 1 AND `QtyTipe` IS NULL) OR (`QtyTipe` = @Original_QtyTi"& _ 
                "pe)) AND ((@IsNull_TotalJual = 1 AND `TotalJual` IS NULL) OR (`TotalJual` = @Ori"& _ 
                "ginal_TotalJual)) AND ((@IsNull_TotalCollect = 1 AND `TotalCollect` IS NULL) OR "& _ 
                "(`TotalCollect` = @Original_TotalCollect)) AND ((@IsNull_Sisa = 1 AND `Sisa` IS "& _ 
                "NULL) OR (`Sisa` = @Original_Sisa)) AND ((@IsNull_NoBook = 1 AND `NoBook` IS NUL"& _ 
                "L) OR (`NoBook` = @Original_NoBook)) AND ((@IsNull_NoInv = 1 AND `NoInv` IS NULL"& _ 
                ") OR (`NoInv` = @Original_NoInv)) AND ((@IsNull_NoCollect = 1 AND `NoCollect` IS"& _ 
                " NULL) OR (`NoCollect` = @Original_NoCollect)) AND ((@IsNull_NoPay = 1 AND `NoPa"& _ 
                "y` IS NULL) OR (`NoPay` = @Original_NoPay)) AND ((@IsNull_Tipe = 1 AND `Tipe` IS"& _ 
                " NULL) OR (`Tipe` = @Original_Tipe)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoETiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoETiket"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoTiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTiket"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AgentID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTransRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackPickup"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "BackPickup"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@mrs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mrs"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Guest"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Guest"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GuestID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GuestIDNO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTranRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoPickUp"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "GoPickUp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GoDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@komisi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "komisi"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Remark"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "Remark"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@other"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "other"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@BackRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TotalJual"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TotalCollect"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Sisa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoBook"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoInv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoCollect"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NoPay"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipe"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoETiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoETiket"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoTiket"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTiket"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AgentID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AgentID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AgentID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTrip"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTransRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTransRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackTransExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackDriver"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "BackDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_collect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "collect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Qty"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Qty"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_mrs"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "mrs"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_mrs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mrs"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Guest"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Guest"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Guest"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Guest"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Country"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Country"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GuestID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GuestID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GuestIDNO"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GuestIDNO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GuestIDNO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoDate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "GoDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTrans"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTrans"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTranRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTranRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTranRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoTransExtra"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoTransExtra"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "GoTransExtra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoArea"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoArea"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GoDriver"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GoDriver"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GoDriver"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_inv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_pay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "pay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_komisi"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "komisi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_komisi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "komisi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackRuteID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRuteID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackDate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackDate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "BackDate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TripBack"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TripBack"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_BackRate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_BackRate"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "BackRate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_QtyTipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "QtyTipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TotalJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TotalJual"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TotalCollect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TotalCollect"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "TotalCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Sisa"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Sisa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "Sisa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoBook"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoBook"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBook"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoInv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoInv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoInv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoCollect"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoCollect"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoCollect"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NoPay"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NoPay"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoPay"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Tipe"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipe"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipe"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Ekajaya.My.MySettings.Default.ekajayaConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `NoETiket`, `NoTiket`, `AgentID`, `GoTrip`, `GoRate`, `BackExtra`, `BackTr"& _ 
                "ans`, `BackTransRate`, `BackTransExtra`, `BackArea`, `BackPickup`, `BackDriver`,"& _ 
                " `collect`, `Qty`, `mrs`, `Guest`, `Country`, `GuestID`, `GuestIDNO`, `GoRuteID`"& _ 
                ", `GoDate`, `GoExtra`, `GoTrans`, `GoTranRate`, `GoTransExtra`, `GoArea`, `GoPic"& _ 
                "kUp`, `GoDriver`, `inv`, `pay`, `komisi`, `Remark`, `other`, `BackRuteID`, `Back"& _ 
                "Date`, `TripBack`, `BackRate`, `QtyTipe`, `TotalJual`, `TotalCollect`, `Sisa`, `"& _ 
                "NoBook`, `NoInv`, `NoCollect`, `NoPay`, `Tipe` FROM `tiketdtl`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ekajayaDataSet.tiketdtlDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ekajayaDataSet.tiketdtlDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ekajayaDataSet.tiketdtlDataTable = New ekajayaDataSet.tiketdtlDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ekajayaDataSet.tiketdtlDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ekajayaDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tiketdtl")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_NoETiket As String,  _
                    ByVal Original_NoTiket As String,  _
                    ByVal Original_AgentID As String,  _
                    ByVal Original_GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDriver As String,  _
                    ByVal Original_collect As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Qty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_mrs As String,  _
                    ByVal Original_Guest As String,  _
                    ByVal Original_Country As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuestID As String,  _
                    ByVal Original_GuestIDNO As String,  _
                    ByVal Original_GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDriver As String,  _
                    ByVal Original_inv As Global.System.Nullable(Of Integer),  _
                    ByVal Original_pay As Global.System.Nullable(Of Integer),  _
                    ByVal Original_komisi As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sisa As Global.System.Nullable(Of Double),  _
                    ByVal Original_NoBook As String,  _
                    ByVal Original_NoInv As String,  _
                    ByVal Original_NoCollect As String,  _
                    ByVal Original_NoPay As String,  _
                    ByVal Original_Tipe As String) As Integer
            If (Original_NoETiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoETiket")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NoETiket,String)
            End If
            If (Original_NoTiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoTiket")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NoTiket,String)
            End If
            If (Original_AgentID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_AgentID,String)
            End If
            If (Original_GoTrip.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_GoTrip.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_GoRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_GoRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_BackExtra.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_BackExtra.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTrans.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_BackTrans.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTransRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_BackTransRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTransExtra.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_BackTransExtra.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_BackArea.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_BackArea.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_BackDriver Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_BackDriver,String)
            End If
            If (Original_collect.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_collect.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Qty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Qty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_mrs Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_mrs,String)
            End If
            If (Original_Guest Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Guest,String)
            End If
            If (Original_Country.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Country.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_GuestID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_GuestID,String)
            End If
            If (Original_GuestIDNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_GuestIDNO,String)
            End If
            If (Original_GoRuteID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_GoRuteID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_GoDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_GoDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_GoExtra.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_GoExtra.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTrans.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_GoTrans.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTranRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_GoTranRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTransExtra.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_GoTransExtra.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_GoArea.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_GoArea.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_GoDriver Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_GoDriver,String)
            End If
            If (Original_inv.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_inv.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_pay.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_pay.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_komisi.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_komisi.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_BackRuteID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_BackRuteID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_BackDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_BackDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_TripBack.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_TripBack.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_BackRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_BackRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_QtyTipe.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_QtyTipe.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalJual.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_TotalJual.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalCollect.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_TotalCollect.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_Sisa.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_Sisa.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_NoBook Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_NoBook,String)
            End If
            If (Original_NoInv Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_NoInv,String)
            End If
            If (Original_NoCollect Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_NoCollect,String)
            End If
            If (Original_NoPay Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_NoPay,String)
            End If
            If (Original_Tipe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_Tipe,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal NoETiket As String,  _
                    ByVal NoTiket As String,  _
                    ByVal AgentID As String,  _
                    ByVal GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal GoRate As Global.System.Nullable(Of Double),  _
                    ByVal BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal BackPickup As String,  _
                    ByVal BackDriver As String,  _
                    ByVal collect As Global.System.Nullable(Of Integer),  _
                    ByVal Qty As Global.System.Nullable(Of Integer),  _
                    ByVal mrs As String,  _
                    ByVal Guest As String,  _
                    ByVal Country As Global.System.Nullable(Of Integer),  _
                    ByVal GuestID As String,  _
                    ByVal GuestIDNO As String,  _
                    ByVal GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal GoDate As Global.System.Nullable(Of Date),  _
                    ByVal GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal GoPickUp As String,  _
                    ByVal GoDriver As String,  _
                    ByVal inv As Global.System.Nullable(Of Integer),  _
                    ByVal pay As Global.System.Nullable(Of Integer),  _
                    ByVal komisi As Global.System.Nullable(Of Double),  _
                    ByVal Remark As String,  _
                    ByVal other As String,  _
                    ByVal BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal BackDate As Global.System.Nullable(Of Date),  _
                    ByVal TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal BackRate As Global.System.Nullable(Of Double),  _
                    ByVal QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Sisa As Global.System.Nullable(Of Double),  _
                    ByVal NoBook As String,  _
                    ByVal NoInv As String,  _
                    ByVal NoCollect As String,  _
                    ByVal NoPay As String,  _
                    ByVal Tipe As String) As Integer
            If (NoETiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoETiket")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NoETiket,String)
            End If
            If (NoTiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoTiket")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NoTiket,String)
            End If
            If (AgentID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AgentID,String)
            End If
            If (GoTrip.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(GoTrip.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GoRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(GoRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (BackExtra.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BackExtra.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (BackTrans.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BackTrans.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BackTransRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BackTransRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BackTransExtra.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BackTransExtra.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (BackArea.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BackArea.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BackPickup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BackPickup,String)
            End If
            If (BackDriver Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BackDriver,String)
            End If
            If (collect.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(collect.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Qty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Qty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (mrs Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(mrs,String)
            End If
            If (Guest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Guest,String)
            End If
            If (Country.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Country.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (GuestID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(GuestID,String)
            End If
            If (GuestIDNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(GuestIDNO,String)
            End If
            If (GoRuteID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(GoRuteID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GoDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GoDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (GoExtra.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(GoExtra.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (GoTrans.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(GoTrans.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (GoTranRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(GoTranRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (GoTransExtra.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(GoTransExtra.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (GoArea.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(GoArea.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (GoPickUp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(GoPickUp,String)
            End If
            If (GoDriver Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(GoDriver,String)
            End If
            If (inv.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(inv.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (pay.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(pay.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (komisi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(komisi.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Remark,String)
            End If
            If (other Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(other,String)
            End If
            If (BackRuteID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(BackRuteID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (BackDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(BackDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TripBack.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(TripBack.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (BackRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(BackRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (QtyTipe.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(QtyTipe.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (TotalJual.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(TotalJual.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (TotalCollect.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(TotalCollect.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Sisa.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Sisa.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (NoBook Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(NoBook,String)
            End If
            If (NoInv Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(NoInv,String)
            End If
            If (NoCollect Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(NoCollect,String)
            End If
            If (NoPay Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(NoPay,String)
            End If
            If (Tipe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Tipe,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NoETiket As String,  _
                    ByVal NoTiket As String,  _
                    ByVal AgentID As String,  _
                    ByVal GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal GoRate As Global.System.Nullable(Of Double),  _
                    ByVal BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal BackPickup As String,  _
                    ByVal BackDriver As String,  _
                    ByVal collect As Global.System.Nullable(Of Integer),  _
                    ByVal Qty As Global.System.Nullable(Of Integer),  _
                    ByVal mrs As String,  _
                    ByVal Guest As String,  _
                    ByVal Country As Global.System.Nullable(Of Integer),  _
                    ByVal GuestID As String,  _
                    ByVal GuestIDNO As String,  _
                    ByVal GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal GoDate As Global.System.Nullable(Of Date),  _
                    ByVal GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal GoPickUp As String,  _
                    ByVal GoDriver As String,  _
                    ByVal inv As Global.System.Nullable(Of Integer),  _
                    ByVal pay As Global.System.Nullable(Of Integer),  _
                    ByVal komisi As Global.System.Nullable(Of Double),  _
                    ByVal Remark As String,  _
                    ByVal other As String,  _
                    ByVal BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal BackDate As Global.System.Nullable(Of Date),  _
                    ByVal TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal BackRate As Global.System.Nullable(Of Double),  _
                    ByVal QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Sisa As Global.System.Nullable(Of Double),  _
                    ByVal NoBook As String,  _
                    ByVal NoInv As String,  _
                    ByVal NoCollect As String,  _
                    ByVal NoPay As String,  _
                    ByVal Tipe As String,  _
                    ByVal Original_NoETiket As String,  _
                    ByVal Original_NoTiket As String,  _
                    ByVal Original_AgentID As String,  _
                    ByVal Original_GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDriver As String,  _
                    ByVal Original_collect As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Qty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_mrs As String,  _
                    ByVal Original_Guest As String,  _
                    ByVal Original_Country As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuestID As String,  _
                    ByVal Original_GuestIDNO As String,  _
                    ByVal Original_GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDriver As String,  _
                    ByVal Original_inv As Global.System.Nullable(Of Integer),  _
                    ByVal Original_pay As Global.System.Nullable(Of Integer),  _
                    ByVal Original_komisi As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sisa As Global.System.Nullable(Of Double),  _
                    ByVal Original_NoBook As String,  _
                    ByVal Original_NoInv As String,  _
                    ByVal Original_NoCollect As String,  _
                    ByVal Original_NoPay As String,  _
                    ByVal Original_Tipe As String) As Integer
            If (NoETiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoETiket")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NoETiket,String)
            End If
            If (NoTiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoTiket")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NoTiket,String)
            End If
            If (AgentID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AgentID,String)
            End If
            If (GoTrip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(GoTrip.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GoRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(GoRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (BackExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BackExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (BackTrans.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BackTrans.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BackTransRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BackTransRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BackTransExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(BackTransExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (BackArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(BackArea.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BackPickup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BackPickup,String)
            End If
            If (BackDriver Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BackDriver,String)
            End If
            If (collect.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(collect.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Qty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Qty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (mrs Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(mrs,String)
            End If
            If (Guest Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Guest,String)
            End If
            If (Country.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Country.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (GuestID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(GuestID,String)
            End If
            If (GuestIDNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(GuestIDNO,String)
            End If
            If (GoRuteID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(GoRuteID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GoDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GoDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (GoExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(GoExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (GoTrans.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(GoTrans.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (GoTranRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(GoTranRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (GoTransExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(GoTransExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (GoArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(GoArea.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (GoPickUp Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(GoPickUp,String)
            End If
            If (GoDriver Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(GoDriver,String)
            End If
            If (inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(inv.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (pay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(pay.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (komisi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(komisi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Remark,String)
            End If
            If (other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(other,String)
            End If
            If (BackRuteID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(BackRuteID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (BackDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(BackDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TripBack.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(TripBack.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (BackRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(BackRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (QtyTipe.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(QtyTipe.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (TotalJual.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(TotalJual.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (TotalCollect.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(TotalCollect.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Sisa.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Sisa.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (NoBook Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(NoBook,String)
            End If
            If (NoInv Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(NoInv,String)
            End If
            If (NoCollect Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(NoCollect,String)
            End If
            If (NoPay Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(NoPay,String)
            End If
            If (Tipe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Tipe,String)
            End If
            If (Original_NoETiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoETiket")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_NoETiket,String)
            End If
            If (Original_NoTiket Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoTiket")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_NoTiket,String)
            End If
            If (Original_AgentID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_AgentID,String)
            End If
            If (Original_GoTrip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_GoTrip.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_GoRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_GoRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_BackExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_BackExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTrans.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_BackTrans.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTransRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_BackTransRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_BackTransExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_BackTransExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_BackArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_BackArea.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_BackDriver Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_BackDriver,String)
            End If
            If (Original_collect.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_collect.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_Qty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Qty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_mrs Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_mrs,String)
            End If
            If (Original_Guest Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Guest,String)
            End If
            If (Original_Country.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Country.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_GuestID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_GuestID,String)
            End If
            If (Original_GuestIDNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_GuestIDNO,String)
            End If
            If (Original_GoRuteID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_GoRuteID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_GoDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_GoDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_GoExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_GoExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTrans.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_GoTrans.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTranRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_GoTranRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_GoTransExtra.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_GoTransExtra.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_GoArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_GoArea.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_GoDriver Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_GoDriver,String)
            End If
            If (Original_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_inv.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_pay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_pay.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_komisi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_komisi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_BackRuteID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_BackRuteID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_BackDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_BackDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_TripBack.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_TripBack.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_BackRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_BackRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_QtyTipe.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_QtyTipe.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalJual.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_TotalJual.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalCollect.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_TotalCollect.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_Sisa.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_Sisa.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_NoBook Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_NoBook,String)
            End If
            If (Original_NoInv Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_NoInv,String)
            End If
            If (Original_NoCollect Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_NoCollect,String)
            End If
            If (Original_NoPay Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_NoPay,String)
            End If
            If (Original_Tipe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_Tipe,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal AgentID As String,  _
                    ByVal GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal GoRate As Global.System.Nullable(Of Double),  _
                    ByVal BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal BackPickup As String,  _
                    ByVal BackDriver As String,  _
                    ByVal collect As Global.System.Nullable(Of Integer),  _
                    ByVal Qty As Global.System.Nullable(Of Integer),  _
                    ByVal mrs As String,  _
                    ByVal Guest As String,  _
                    ByVal Country As Global.System.Nullable(Of Integer),  _
                    ByVal GuestID As String,  _
                    ByVal GuestIDNO As String,  _
                    ByVal GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal GoDate As Global.System.Nullable(Of Date),  _
                    ByVal GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal GoPickUp As String,  _
                    ByVal GoDriver As String,  _
                    ByVal inv As Global.System.Nullable(Of Integer),  _
                    ByVal pay As Global.System.Nullable(Of Integer),  _
                    ByVal komisi As Global.System.Nullable(Of Double),  _
                    ByVal Remark As String,  _
                    ByVal other As String,  _
                    ByVal BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal BackDate As Global.System.Nullable(Of Date),  _
                    ByVal TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal BackRate As Global.System.Nullable(Of Double),  _
                    ByVal QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Sisa As Global.System.Nullable(Of Double),  _
                    ByVal NoBook As String,  _
                    ByVal NoInv As String,  _
                    ByVal NoCollect As String,  _
                    ByVal NoPay As String,  _
                    ByVal Tipe As String,  _
                    ByVal Original_NoETiket As String,  _
                    ByVal Original_NoTiket As String,  _
                    ByVal Original_AgentID As String,  _
                    ByVal Original_GoTrip As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackTransRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDriver As String,  _
                    ByVal Original_collect As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Qty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_mrs As String,  _
                    ByVal Original_Guest As String,  _
                    ByVal Original_Country As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuestID As String,  _
                    ByVal Original_GuestIDNO As String,  _
                    ByVal Original_GoRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_GoExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTrans As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoTranRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoTransExtra As Global.System.Nullable(Of Double),  _
                    ByVal Original_GoArea As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoDriver As String,  _
                    ByVal Original_inv As Global.System.Nullable(Of Integer),  _
                    ByVal Original_pay As Global.System.Nullable(Of Integer),  _
                    ByVal Original_komisi As Global.System.Nullable(Of Double),  _
                    ByVal Original_BackRuteID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_TripBack As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BackRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_QtyTipe As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalJual As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalCollect As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sisa As Global.System.Nullable(Of Double),  _
                    ByVal Original_NoBook As String,  _
                    ByVal Original_NoInv As String,  _
                    ByVal Original_NoCollect As String,  _
                    ByVal Original_NoPay As String,  _
                    ByVal Original_Tipe As String) As Integer
            Return Me.Update(Original_NoETiket, Original_NoTiket, AgentID, GoTrip, GoRate, BackExtra, BackTrans, BackTransRate, BackTransExtra, BackArea, BackPickup, BackDriver, collect, Qty, mrs, Guest, Country, GuestID, GuestIDNO, GoRuteID, GoDate, GoExtra, GoTrans, GoTranRate, GoTransExtra, GoArea, GoPickUp, GoDriver, inv, pay, komisi, Remark, other, BackRuteID, BackDate, TripBack, BackRate, QtyTipe, TotalJual, TotalCollect, Sisa, NoBook, NoInv, NoCollect, NoPay, Tipe, Original_NoETiket, Original_NoTiket, Original_AgentID, Original_GoTrip, Original_GoRate, Original_BackExtra, Original_BackTrans, Original_BackTransRate, Original_BackTransExtra, Original_BackArea, Original_BackDriver, Original_collect, Original_Qty, Original_mrs, Original_Guest, Original_Country, Original_GuestID, Original_GuestIDNO, Original_GoRuteID, Original_GoDate, Original_GoExtra, Original_GoTrans, Original_GoTranRate, Original_GoTransExtra, Original_GoArea, Original_GoDriver, Original_inv, Original_pay, Original_komisi, Original_BackRuteID, Original_BackDate, Original_TripBack, Original_BackRate, Original_QtyTipe, Original_TotalJual, Original_TotalCollect, Original_Sisa, Original_NoBook, Original_NoInv, Original_NoCollect, Original_NoPay, Original_Tipe)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tiketdtlTableAdapter As tiketdtlTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tiketdtlTableAdapter() As tiketdtlTableAdapter
            Get
                Return Me._tiketdtlTableAdapter
            End Get
            Set
                Me._tiketdtlTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tiketdtlTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tiketdtlTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tiketdtlTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ekajayaDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tiketdtl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tiketdtlTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ekajayaDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tiketdtl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tiketdtlTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ekajayaDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tiketdtl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tiketdtlTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ekajayaDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tiketdtlTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tiketdtlTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tiketdtlTableAdapter, Me._tiketdtlTableAdapter.Connection)
                    Me._tiketdtlTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tiketdtlTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._tiketdtlTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tiketdtlTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tiketdtlTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tiketdtlTableAdapter) Is Nothing) Then
                    Me._tiketdtlTableAdapter.Connection = CType(revertConnections(Me._tiketdtlTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tiketdtlTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
